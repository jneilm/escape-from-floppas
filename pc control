using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UIElements;

public class PlayerMoveMobile : MonoBehaviour
{
    public  float moveSpeed = 25f;
    public float leftRightSpeed;
    static public bool canMove = false;
    public bool isJumping = false;
    public bool comingDown;
    public GameObject playerObject;

    private void Start()
    {
        Time.timeScale = 0.70f;
        StartCoroutine(speedIncrease());
    }

    void Update()
    {
       transform.Translate(Vector3.forward * Time.deltaTime * moveSpeed, Space.World);

       if (Input.GetKey(KeyCode.A)||Input.GetKey(KeyCode.LeftArrow))
       {
        if (this.gameObject.transform.position.x > levelBoundary.leftSide)
           {
                if (canMove)
                {
                    transform.Translate(Vector3.left * Time.deltaTime * leftRightSpeed);  
                }
                
           }     
       }

       {
        if (this.gameObject.transform.position.x < levelBoundary.rightSide)
           {
                if (canMove)
                {
                   transform.Translate(Vector3.left * Time.deltaTime * leftRightSpeed * -1); 
                }                
           }
       }

        if (Input.GetKeyUp(KeyCode.W) || Input.GetKeyUp(KeyCode.UpArrow))
        {
                if (isJumping == false)
                {
                    isJumping = true;
                    playerObject.GetComponent<Animator>().Play("Jump");
                }
        }
      
        if (isJumping == true)
          {
                if (comingDown == false)
               {
                transform.Translate(Vector3.up * Time.deltaTime * 3, Space.World);
                StartCoroutine(JumpSequence());
               }
          }


        if (comingDown == true)
        {
            transform.Translate(Vector3.down * Time.deltaTime * 3, Space.World);
        }
    }


    IEnumerator JumpSequence()
    {
        yield return new WaitForSeconds(0.55f);
        comingDown = true;
        yield return new WaitForSeconds(0.55f);
        isJumping = false;
        comingDown = false;
        playerObject.GetComponent<Animator>().Play("Standard Run");
    }

    IEnumerator speedIncrease()
    {
        yield return new WaitForSeconds(15);
        Time.timeScale = Time.timeScale + 0.05f;
        StartCoroutine(speedIncrease());
    }
    
}
